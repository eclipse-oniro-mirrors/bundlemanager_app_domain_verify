# Copyright (C) 2025-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/ets_frontend/ets2abc_config.gni")
import("//build/ohos.gni")
import("//build/ohos/taihe_idl/taihe.gni")
import("../../../../app_domain_verify.gni")

subsystem_name = "bundlemanager"
part_name = "app_domain_verify"
taihe_generated_file_path = "$taihe_file_path/out/$subsystem_name/$part_name"

copy_taihe_idl("copy_taihe") {
  sources = [
    "${app_domain_verify_kits_path}/ani/idl/ohos.bundle.appDomainVerify.taihe",
  ]
}

ohos_taihe("run_taihe") {
  taihe_generated_file_path = "$taihe_generated_file_path"
  deps = [ ":copy_taihe" ]
  outputs = [
    "$taihe_generated_file_path/src/ohos.bundle.appDomainVerify.ani.cpp",
    "$taihe_generated_file_path/src/ohos.bundle.appDomainVerify.abi.c",
  ]
}

taihe_shared_library("app_domain_verify_ani") {
  taihe_generated_file_path = "$taihe_generated_file_path"
  subsystem_name = "$subsystem_name"
  part_name = "$part_name"
  include_dirs = [
    "include",
    "${app_domain_verify_client_path}/include",
    "${app_domain_verify_common_path}/include",
    "${app_domain_verify_common_path}/include/zidl",
    "${app_domain_verify_kits_path}/common/include",
  ]
  sources = get_target_outputs(":run_taihe")
  sources += [
    "${app_domain_verify_kits_path}/ani/src/ani_constructor.cpp",
    "${app_domain_verify_kits_path}/ani/src/ohos.bundle.appDomainVerify.impl.cpp",
    "${app_domain_verify_kits_path}/common/src/api_event_reporter.cpp",
    "${app_domain_verify_kits_path}/common/src/config_parser.cpp",
  ]
  deps = [
    ":run_taihe",
    "${app_domain_verify_client_path}:app_domain_verify_mgr_client",
    "${app_domain_verify_common_path}:app_domain_verify_common",
  ]
  if (os_level == "standard") {
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
    }
  }
  cflags = [
    "-DHILOG_ENABLE",
    "-fPIC",
    "-g3",
  ]
  external_deps = [
    "ability_base:want",
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "hiappevent:hiappevent_innerapi",
    "hilog:libhilog",
    "ipc:ipc_core",
    "napi:ace_napi",
    "runtime_core:ani",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}

generate_static_abc("app_domain_verify_ets") {
  base_url = "$taihe_generated_file_path"
  files = [ "$taihe_generated_file_path/@ohos.bundle.appDomainVerify.ets" ]
  is_boot_abc = "True"
  device_dst_file = "/system/framework/app_domain_verify_ets.abc"
  dependencies = [ ":run_taihe" ]
}

generate_static_abc("app_domain_verify_test") {
  base_url = "${app_domain_verify_kits_path}/ani/test"
  files = [ "${app_domain_verify_kits_path}/ani/test/test_main.ets" ]
  is_boot_abc = "True"
  device_dst_file = "/system/framework/app_domain_verify_test.abc"
}

ohos_prebuilt_etc("app_domain_verify_etc") {
  source = "$target_out_dir/app_domain_verify_ets.abc"
  module_install_dir = "framework"
  part_name = "$part_name"
  subsystem_name = "$subsystem_name"
  deps = [
    ":app_domain_verify_ets",
    # ":app_domain_verify_test",
  ]
}

group("appdomainverify_ani") {
  deps = [
    ":app_domain_verify_ani",
    ":app_domain_verify_etc",
  ]
}

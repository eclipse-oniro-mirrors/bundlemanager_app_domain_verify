# Copyright (C) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/bundlemanager/app_domain_verify/app_domain_verify.gni")

config("module_private_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "${app_domain_verify_client_path}/include",
    "${app_domain_verify_service_path}/include",
    "${app_domain_verify_common_path}/include",
    "${app_domain_verify_frameworks_common_path}/include",
    "${app_domain_verify_frameworks_common_path}/include/utils",
    "${app_domain_verify_frameworks_common_path}/include/httpsession",
    "${app_domain_verify_common_path}/include/zidl",
    "${app_domain_verify_frameworks_common_path}/include/config",
    "${app_domain_verify_frameworks_verifier_path}/include",
    "${app_domain_verify_frameworks_extension_path}/include",
    "${app_domain_verify_service_path}/include/agent/core",
    "${app_domain_verify_service_path}/include/agent/zidl",
    "${app_domain_verify_service_path}/include/agent/bms",
    "${app_domain_verify_service_path}/include/manager/rdb",
    "${app_domain_verify_service_path}/include/manager/core",
    "${app_domain_verify_service_path}/include/manager/constant",
    "${app_domain_verify_service_path}/include/manager/zidl",
    "${app_domain_verify_service_path}/include/manager/config",
    "${app_domain_verify_test_path}/mock/include",
    "${app_domain_verify_frameworks_common_path}/include/dfx",
  ]
}

module_output_path = "app_domain_verify/app_domain_verify"

ohos_unittest("app_domain_verify_config_test") {
  module_out_path = module_output_path

  sources = [
    "${app_domain_verify_frameworks_common_path}/src/config/white_list_config_mgr.cpp",
    "${app_domain_verify_test_path}/mock/src/mock_preferences_helper.cpp",
    "config_test.cpp",
  ]
  configs = [ ":module_private_config" ]
  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image_native",
    "init:libbegetutil",
    "ipc:ipc_core",
    "netstack:http_client",
    "os_account:os_account_innerkits",
    "preferences:native_preferences",
    "relational_store:native_rdb",
    "samgr:samgr_proxy",
  ]

  defines = [ "API_EXPORT=__attribute__((visibility (\"default\")))" ]
  deps = [
    "${app_domain_verify_frameworks_common_path}:app_domain_verify_frameworks_common",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]
}

# Copyright (C) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/bundlemanager/app_domain_verify/app_domain_verify.gni")

config("module_private_config") {
  visibility = [ ":*" ]
  configs = [ "//build/config/compiler:exceptions" ]
  include_dirs = [
    "${app_domain_verify_client_path}/include",
    "${app_domain_verify_service_path}/include",
    "${app_domain_verify_service_path}/include/agent/core",
    "${app_domain_verify_service_path}/include/agent/zidl",
    "${app_domain_verify_service_path}/include/agent/bms",
    "${app_domain_verify_service_path}/include/agent/constant",
    "${app_domain_verify_service_path}/include/agent/httpsession",
    "${app_domain_verify_service_path}/include/agent/utils",
    "${app_domain_verify_service_path}/include/manager/rdb",
    "${app_domain_verify_service_path}/include/manager/core",
    "${app_domain_verify_service_path}/include/manager/constant",
    "${app_domain_verify_service_path}/include/manager/zidl",
    "${app_domain_verify_common_path}/include",
    "${app_domain_verify_common_path}/include/utils",
    "${app_domain_verify_extension_path}/include",
    "../mock/include",
  ]
}

module_output_path = "app_domain_verify/app_domain_verify"

ohos_unittest("app_domain_verify_module_test") {
  module_out_path = module_output_path

  sources = [
  "app_domain_verify_agent_module_test.cpp",
  "app_domain_verify_mgr_module_test.cpp",
  ]
  configs = [
    ":module_private_config",
  ]
  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "c_utils:utils",
    "hilog:libhilog",
    "image_framework:image_native",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "ffrt:libffrt",
    "netstack:http_client",
    "relational_store:native_rdb",
    "os_account:os_account_innerkits",
    "eventhandler:libeventhandler",
    "hisysevent:libhisysevent",
  ]

  defines = [ "API_EXPORT=__attribute__((visibility (\"default\")))" ]
  deps = [
    "${app_domain_verify_client_path}:app_domain_verify_agent_client",
    "${app_domain_verify_client_path}:app_domain_verify_mgr_client",
    "${app_domain_verify_service_path}:app_domain_verify_mgr_service",
    "${app_domain_verify_service_path}:app_domain_verify_agent_service",
    "${app_domain_verify_common_path}:app_domain_verify_common",
    "${app_domain_verify_extension_path}:app_domain_verify_extension_framework",
    "//third_party/googletest:gtest_main",
    "//third_party/googletest:gmock_main",
  ]
}
  ohos_unittest("app_domain_verify_service_test") {
  module_out_path = module_output_path

  sources = [
    "./manager/core/app_domain_verify_data_mgr_test.cpp",
    "./manager/core/app_domain_verify_mgr_service_test.cpp",
    "./manager/rdb/app_domain_verify_rdb_data_manager_test.cpp",
    "./manager/rdb/app_domain_verify_rdb_open_callback_test.cpp",

    "./agent/bms/bundle_info_query_test.cpp",
    "./agent/core/domain_verifier_test.cpp",
    "./agent/core/app_domain_verify_agent_service_test.cpp",
    "./agent/httpsession/app_domain_verify_task_mgr_test.cpp",
    "./agent/utils/domain_json_util_test.cpp",

    "../mock/src/mock_service_registry.cpp",
    "../mock/src/mock_system_ability.cpp",
    "../mock/src/mock_system_ability_ondemand_reason.cpp",
    "../mock/src/mock_bundle_manager.cpp",
    "../mock/src/mock_os_account_manager.cpp",
    "${app_domain_verify_service_path}/src/agent/core/app_domain_verify_agent_service.cpp",
    "${app_domain_verify_service_path}/src/agent/core/domain_verifier.cpp",
    "${app_domain_verify_service_path}/src/agent/zidl/app_domain_verify_agent_service_proxy.cpp",
    "${app_domain_verify_service_path}/src/agent/zidl/app_domain_verify_agent_service_stub.cpp",
    "${app_domain_verify_service_path}/src/agent/bms/bundle_info_query.cpp",
    "${app_domain_verify_service_path}/src/agent/httpsession/app_domain_verify_task_mgr.cpp",
    "${app_domain_verify_service_path}/src/agent/httpsession/verify_http_task.cpp",
    "${app_domain_verify_service_path}/src/agent/httpsession/verify_http_task_factory.cpp",
    "${app_domain_verify_service_path}/src/agent/utils/domain_json_util.cpp",
    "${app_domain_verify_service_path}/src/manager/rdb/app_domain_verify_rdb_data_manager.cpp",
    "${app_domain_verify_service_path}/src/manager/rdb/app_domain_verify_rdb_open_callback.cpp",
    "${app_domain_verify_service_path}/src/manager/core/app_domain_verify_data_mgr.cpp",
    "${app_domain_verify_service_path}/src/manager/core/app_domain_verify_mgr_service.cpp",
    "${app_domain_verify_service_path}/src/manager/zidl/app_domain_verify_mgr_service_proxy.cpp",
    "${app_domain_verify_service_path}/src/manager/zidl/app_domain_verify_mgr_service_stub.cpp",
  ]
  configs = [
    ":module_private_config",
  ]
  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "c_utils:utils",
    "hilog:libhilog",
    "image_framework:image_native",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "ffrt:libffrt",
    "netstack:http_client",
    "relational_store:native_rdb",
    "os_account:os_account_innerkits",
    "eventhandler:libeventhandler",
    "init:libbegetutil",
    "hisysevent:libhisysevent",
  ]

  defines = [ "API_EXPORT=__attribute__((visibility (\"default\")))" ]
  deps = [
    "${app_domain_verify_client_path}:app_domain_verify_agent_client",
    "${app_domain_verify_client_path}:app_domain_verify_mgr_client",
    "${app_domain_verify_common_path}:app_domain_verify_common",
    "${app_domain_verify_extension_path}:app_domain_verify_extension_framework",
    "//third_party/googletest:gtest_main",
    "//third_party/googletest:gmock_main",
  ]
  }


# Copyright (C) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/bundlemanager/app_domain_verify/app_domain_verify.gni")

config("module_private_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "./mock",
    "${app_domain_verify_client_path}/include",
    "${app_domain_verify_service_path}/include",
    "${app_domain_verify_common_path}/include",
    "${app_domain_verify_common_path}/include/utils",
    "${app_domain_verify_common_path}/include/httpsession",
    "${app_domain_verify_verifier_path}/include",
    "${app_domain_verify_extension_path}/include",
    "${app_domain_verify_service_path}/include/agent/core",
    "${app_domain_verify_service_path}/include/agent/zidl",
    "${app_domain_verify_service_path}/include/agent/bms",
    "${app_domain_verify_service_path}/include/manager/rdb",
    "${app_domain_verify_service_path}/include/manager/core",
    "${app_domain_verify_service_path}/include/manager/constant",
    "${app_domain_verify_service_path}/include/manager/zidl",
  ]
  cflags = [ "-fno-exceptions" ]
  cflags_cc = [ "-fno-exceptions" ]
}

module_output_path = "app_domain_verify/app_domain_verify"

ohos_unittest("app_domain_verify_bean_parcel_test") {
  module_out_path = module_output_path

  sources = [
    "${app_domain_verify_common_path}/src/app_verify_base_info.cpp",
    "${app_domain_verify_common_path}/src/bundle_verify_status_info.cpp",
    "${app_domain_verify_common_path}/src/skill_uri.cpp",
    "bean_parcel_test.cpp",
    "mock/parcel.cpp",
  ]
  configs = [ ":module_private_config" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "json:nlohmann_json_static",
  ]

  defines = [ "API_EXPORT=__attribute__((visibility (\"default\")))" ]
  deps = [
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]
}

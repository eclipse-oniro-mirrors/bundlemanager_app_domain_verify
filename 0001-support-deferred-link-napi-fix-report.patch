From 095ab1d448c5b13353ae0585d862e67ca7ca81a6 Mon Sep 17 00:00:00 2001
From: woohoa <wanghuan36@huawei.com>
Date: Tue, 5 Nov 2024 15:05:54 +0800
Subject: [PATCH] support deferred link napi fix report

Change-Id: Ica1bd3b49c4b1f058bbb59e328cd3a7f77997f0f
---
 .../src/app_domain_verify_manager_napi.cpp       | 16 ++++++++--------
 .../js/deferred_link/src/deferred_link_napi.cpp  |  3 ++-
 .../kits/js/event/include/api_event_reporter.h   |  7 +++++--
 .../kits/js/event/src/api_event_reporter.cpp     |  9 +++++++++
 4 files changed, 24 insertions(+), 11 deletions(-)

diff --git a/interfaces/kits/js/app_domain_verify/src/app_domain_verify_manager_napi.cpp b/interfaces/kits/js/app_domain_verify/src/app_domain_verify_manager_napi.cpp
index faf40b8..39ddd40 100644
--- a/interfaces/kits/js/app_domain_verify/src/app_domain_verify_manager_napi.cpp
+++ b/interfaces/kits/js/app_domain_verify/src/app_domain_verify_manager_napi.cpp
@@ -37,22 +37,22 @@ napi_value QueryAssociatedDomains(napi_env env, napi_callback_info info)
     NAPI_CALL_BASE(env, napi_get_cb_info(env, info, &argc, args, nullptr, nullptr), nullptr);
     std::string bundleName = GetString(env, args[0]);
     if (!CheckInput(bundleName)) {
-        reporter.WriteEndEvent(API_FAIL, CommonErrorCode::E_PARAM_ERROR);
+        reporter.SetEvent(API_FAIL, CommonErrorCode::E_PARAM_ERROR);
         return BuildError(env, CommonErrorCode::E_PARAM_ERROR, ErrCodeMap[CommonErrorCode::E_PARAM_ERROR]);
     }
     std::vector<std::string> domains;
     auto ret = AppDomainVerifyMgrClient::GetInstance()->QueryAssociatedDomains(bundleName, domains);
     if (ret != 0) {
         if (ErrCodeMap.count(static_cast<CommonErrorCode>(ret)) != 0) {
-            reporter.WriteEndEvent(API_FAIL, static_cast<CommonErrorCode>(ret));
+            reporter.SetEvent(API_FAIL, static_cast<CommonErrorCode>(ret));
             return BuildError(env, static_cast<CommonErrorCode>(ret), ErrCodeMap[static_cast<CommonErrorCode>(ret)]);
         } else {
             APP_DOMAIN_VERIFY_HILOGE(APP_DOMAIN_VERIFY_MGR_MODULE_SERVICE, "unknown error:%{public}d.", ret);
-            reporter.WriteEndEvent(API_FAIL, ret);
+            reporter.SetEvent(API_FAIL, ret);
             return BuildStringArray(env, domains);
         }
     }
-    reporter.WriteEndEvent(API_SUCCESS, ret);
+    reporter.SetEvent(API_SUCCESS, ret);
     return BuildStringArray(env, domains);
 }
 napi_value QueryAssociatedBundleNames(napi_env env, napi_callback_info info)
@@ -64,22 +64,22 @@ napi_value QueryAssociatedBundleNames(napi_env env, napi_callback_info info)
     NAPI_CALL_BASE(env, napi_get_cb_info(env, info, &argc, args, nullptr, nullptr), nullptr);
     std::string domain = GetString(env, args[0]);
     if (!CheckInput(domain)) {
-        reporter.WriteEndEvent(API_FAIL, CommonErrorCode::E_PARAM_ERROR);
+        reporter.SetEvent(API_FAIL, CommonErrorCode::E_PARAM_ERROR);
         return BuildError(env, CommonErrorCode::E_PARAM_ERROR, ErrCodeMap[CommonErrorCode::E_PARAM_ERROR]);
     }
     std::vector<std::string> bundleNames;
     auto ret = AppDomainVerifyMgrClient::GetInstance()->QueryAssociatedBundleNames(domain, bundleNames);
     if (ret != 0) {
         if (ErrCodeMap.count(static_cast<CommonErrorCode>(ret)) != 0) {
-            reporter.WriteEndEvent(API_FAIL, static_cast<CommonErrorCode>(ret));
+            reporter.SetEvent(API_FAIL, static_cast<CommonErrorCode>(ret));
             return BuildError(env, static_cast<CommonErrorCode>(ret), ErrCodeMap[static_cast<CommonErrorCode>(ret)]);
         } else {
             APP_DOMAIN_VERIFY_HILOGE(APP_DOMAIN_VERIFY_MGR_MODULE_SERVICE, "unknown error:%{public}d.", ret);
-            reporter.WriteEndEvent(API_FAIL, ret);
+            reporter.SetEvent(API_FAIL, ret);
             return BuildStringArray(env, bundleNames);
         }
     }
-    reporter.WriteEndEvent(API_SUCCESS, ret);
+    reporter.SetEvent(API_SUCCESS, ret);
     return BuildStringArray(env, bundleNames);
 }
 }
\ No newline at end of file
diff --git a/interfaces/kits/js/deferred_link/src/deferred_link_napi.cpp b/interfaces/kits/js/deferred_link/src/deferred_link_napi.cpp
index ad79f60..d151734 100644
--- a/interfaces/kits/js/deferred_link/src/deferred_link_napi.cpp
+++ b/interfaces/kits/js/deferred_link/src/deferred_link_napi.cpp
@@ -68,6 +68,7 @@ void GetDeferredLinkComplete(napi_env env, napi_status status, void* data)
         NAPI_CALL_RETURN_VOID(env, napi_get_null(env, &result[0]));
         result[ARGS_SIZE_ONE] = BuildString(env, asyncCallbackInfo->deferred_link);
     } else {
+        asyncCallbackInfo->apiReporter->SetEvent(API_FAIL, CommonErrorCode::E_INTERNAL_ERR);
         result[0] = BuildError(env, CommonErrorCode::E_INTERNAL_ERR, g_ErrCodeMap[CommonErrorCode::E_INTERNAL_ERR]);
     }
     if (asyncCallbackInfo->deferred) {
@@ -85,7 +86,7 @@ void GetDeferredLinkComplete(napi_env env, napi_status status, void* data)
         NAPI_CALL_RETURN_VOID(
             env, napi_call_function(env, nullptr, callback, sizeof(result) / sizeof(result[0]), result, &placeHolder));
     }
-    callbackPtr->apiReporter->WriteEndEvent(API_SUCCESS, asyncCallbackInfo->err);
+    callbackPtr->apiReporter->SetEvent(API_SUCCESS, asyncCallbackInfo->err);
     APP_DOMAIN_VERIFY_HILOGD(APP_DOMAIN_VERIFY_MGR_MODULE_SERVICE, "called end");
 }
 
diff --git a/interfaces/kits/js/event/include/api_event_reporter.h b/interfaces/kits/js/event/include/api_event_reporter.h
index d7cc018..71f0cff 100644
--- a/interfaces/kits/js/event/include/api_event_reporter.h
+++ b/interfaces/kits/js/event/include/api_event_reporter.h
@@ -22,16 +22,19 @@ constexpr int32_t API_FAIL = 1;
 class ApiEventReporter {
 public:
     explicit ApiEventReporter(const std::string& apiName);
-    ~ApiEventReporter() = default;
-    void WriteEndEvent(const int result, const int32_t errCode);
+    ~ApiEventReporter();
+    void SetEvent(const int result, const int32_t errCode);
 
 private:
+    void WriteEndEvent(const int result, const int32_t errCode);
     int64_t AddProcessor();
 
 private:
     std::string transId_;
     std::string apiName_;
     int64_t startTime_;
+    int result_{ API_FAIL };
+    int32_t errCode_{ -1 };
 };
 }
 #endif  // APP_DOMAIN_VERIFY_MANAGER_API_EVENT_REPORTER_H
diff --git a/interfaces/kits/js/event/src/api_event_reporter.cpp b/interfaces/kits/js/event/src/api_event_reporter.cpp
index 046f4ec..60dca38 100644
--- a/interfaces/kits/js/event/src/api_event_reporter.cpp
+++ b/interfaces/kits/js/event/src/api_event_reporter.cpp
@@ -104,4 +104,13 @@ void ApiEventReporter::WriteEndEvent(const int result, const int32_t errCode)
         "errCode:%{public}d, ret:%{public}d",
         transId_.c_str(), apiName_.c_str(), SDK_NAME.c_str(), result, errCode, ret);
 }
+void ApiEventReporter::SetEvent(const int result, const int errCode)
+{
+    result_ = result;
+    errCode_ = errCode;
+}
+ApiEventReporter::~ApiEventReporter()
+{
+    WriteEndEvent(result_, errCode_);
+}
 }
\ No newline at end of file
-- 
2.25.1

